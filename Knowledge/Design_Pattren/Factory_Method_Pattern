2018 12 30

#Design Pattern

##Factory_Method_Pattern

현업에서 사용하고 있는데 이게 팩토리 메소드 패턴인지 모르고 사용하고 있다가
공부하는데 문득 아... 이게 이거구나 하다 이번에 정리하게 되었습니다 

팩토리 메소드 패턴(Factory Pattern)

객체를 생성하기 위한 인터페이스를 정의(만)하는데,
어떤 클래스의 인스턴스를 만들지는 (상속받은)서브클래스에서 결정하게 만든다.
즉 팩토리 메소드 패턴을 이용하면 클래스의 인스턴스를 만드는 일을 서브클래스에게 맡기는 것.

public class Pizza {

 String name;
 public String getName(){
   return name;
 }
}

class CheesePizza extends Pizza {
}

class basilPizza extends Pizza { //바질 좋아 ^^
}

public abstract class PizzaFactory {

  public PizzaFactory(){
  }
  
  //피자를 생성해주는 추상 메소드 
  abstract Pizza createPizza(String type);

}

class CheesePizzaFactory extends PizzaFactory{

  @Override
  Pizza createPizza(String type){
    return new CheesePizza();
  }
}
  
class BasilPizzaFactory extends PizzaFactory{

  @Override
  Pizza createPizza(String type){
    return new BasilPizza();
  }
}
팩토리 메소드 패턴의 장점은
객체 생성을 한군데에서 관리할 수 있고
동일한 인터페이스 구현으로 새로운 객체가 추가되더라고 다른 서브클래스들의 소스 수정이 없다
제품을 생성하는 부분과 사용하는 부분을 

출처: http://huiyu.tistory.com/entry/4-Factory-Method-Pattern팩토리-메소드-패턴 [huiyu]
