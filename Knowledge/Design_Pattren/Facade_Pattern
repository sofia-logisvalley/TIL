2019 1 2

#Design Pattern

##Facade_Pattern

이해하기 쉬운 홈시어터를 예로 들어 파사드 패턴에 대해 정리해보았습니다

퍼사드 패턴은 인터페이스를 단순화시키기 위해서 인터페이스를 변경한다.
때문에 훨씬 쓰기 쉬운 인터페이스를 제공하는 퍼사드 클래스를 구현함으로써 복잡한 시스템을 훨씬 쉽게 사용할 수 있다.

어떤 서브시스템에 속한 일련의 복잡한 클래스들을 단순화 하고 "통합한 클래스"를 만들어 퍼사드 패턴을 완성하였다.
클라이언트와 서브시스템이 서로 긴밀하게 연결되지 않아도 되고. 최소 지식 원칙 을 준수하는데도 도움을 준다.

HomeTheaterFacade.java
public class HomeTheaterFacade {

           Amplifier amp;

           Tuner tuner;

           Dvdplayer dvd;

           CdPlayer cd;

           Projector projector;

           TheaterLights lights;

           Screen screen;

           PopcornPopper popper;



           public HomeTheaterFacade( Amplifier amp,

                                                Tuner tuner, 

                                                DvdPlayer dvd,

                                                CdPlayer cd,

                                                Projector projector,

                                                Screen screen,

                                                TheaterLights lights,

                                                PopcornPopper popper) {

                    this.amp = amp;

                    this.tunner = tuner;

                    this.dvd = dvd;

                    this.cd = cd;

                    this.projector = projector;

                    this.screen = screen;

                    this.lights = lights;

                    this.popper = popper;

          }



          public void watchMovie (String movie) {

                    System.out.println("Get ready to watch a movie...");

                    popper.on();

                    popper.pop();

                    lights.dim(10);

                    screen.down();

                    projector.on();

                    projector.wideScreenMode();

                    amp.on();

                    amp.setDvd(dvd);

                    amp.setsurroundSound();

                    amp.setVolume(5);

                    dvd.on();

                    dvd.play(movie);

          }



          public void endMovie() {

                    System.out.println("Shutting movie theater down...");

                    popper.off();

                    lights.on();

                    screen.up();

                    projector.off();

                    amp.off();

                    dvd.stop();

                    dvd.eject();

                    dvd.off();

          }



 }

public class HomeTheaterTestDrive {

         public static void main(String[] args) {

                    // instantiate components here

                    HomeTheaterFacade homeTheater  =

                               new HomeTheaterFacade(amp, tuner, dvd, cd, projector, screen, lights, popper);

                    homeTheater.watchMovie("신과함께");

                    homeTheater.endMovie();



          }

}
위처럼 파사드 객체만 호출해서 사용하기 편리하다


출처: http://jusungpark.tistory.com/23



