2018 10 28

#DB

##MySQL 연산자

Real MySQL 책의 7.3.2 MySQL 연산자 정리해보기로 했습니다

1. 부정(Not-Equal) 비교(<>,!=)
'같지 않다' 비교를 위한 연산자는 '<>'를 일반적으로 많이 사용한다. 이와 함께 C/C++의 연산자인 '!='도 Not-Equal 연산자로 사용할 수 있다.
하지만 가독성을 위해 <>와 != 둘 중 통일해서 사용하는 방법을 권장한다.

2. NOT 연산자(!)
연산의 결과를 반대로(부정) 만드는 연산자로 'NOT'을 사용한다. 하지만 '!'연산자를 같은 목적으로 사용할 수 있다. 사실 NOT 이나 !는 불리언 값뿐만 아니라
숫자나 문자열 표현식에서도 사용할 수 있지만 부정의 결과 값을 정확히 예측할 수 없는 경우에는 사용을 자제하는 것이 좋다. 
ex)
mysql > SELECT ! 1;
0

mysql > SELECT !FALSE;
1

mysql > SELECT NOT 1;
0

3. AND(&&)와 OR(||) 연산자
'&&'은 AND 연산자와 같으며, '||'는 OR 연산자와 같다.
문자열 결합 연산에 '||'를 사용하고 싶으면 
mysql > SET sql_mode='PIPE_AS_CONCAT';
을 설정하면 된다. 물론 이 설정이 활성화되면 "불리언 표현식"을 결합할 때 '&&'연산자는 사용할 수 있지만 '||'는 사용할 수 없다.
SQL의 가독성을 높이기 위해 다른 용도로 사용될 수 있는 '&&'와 '||' 연산자는 사용 자제하는 것이 좋다.

4. 나누기(/,DIV)와 나머지(%,MOD) 연산자
나눈기 연산자는 일반적으로 '/'를 사용한다
나눈 몫의 정수 부분만 가져오려면 DIV 연산자를 사용하고,
나눈 몫이 아닌 나머지를 가져오는 연산자로는 % 또는 MOD 연산자(함수)를 사용한다.

5. REGEXP 연산자
^ 문자열의 시작을 표시
$ 문자열의 끝을 표시
[] 문자 그룹을 표시, [x-z]라고 하면 x,y,z 문자 중 하나인지 확인, 문자 하나와 일치하는지 확인
() 문자열 그룹을 표시, (xyz)라고 하면 세 문자 중 한 문자가 있는지 체크하는 것이 아니라 반드시 'xyz' 모두 있는지 확인
| 연결된 문자열 중 하나인지 확인, abc|xyz라고 표현하면 'abc'이거나 'xyz'인지 확인
. 어떠한 문자든지 1개의 문자를 표시하며, 정규 표현식으로 "..."이라고 표현했다면 3개의 문자로 구성된 문자열을 찾는 것이다.
* 이 기호 앞에 표시된 정규 표현식이 0 또는 1번 이상 반복될 수 있다는 표시다.
+ 이 기호 앞에 표시된 정규 표현식이 1번 이상 반복될 수 있다는 표시다.
? 이 기호 앞에 표시된 정규 표현식이 0 또는 1번만 올 수 있다는 표시다.
ex ) [a-zA-Z0-9]* 영문 대소문자와 숫자만으로 구성된 문자열에 대한 정규 표현

6. LIKE 연산자
% 0 또는 1개 이상의 모든 문자에 일치
_ 정확히 1개의 문자에 일치

7. BETWEEN 연산자
... dep_no BETWEEN 'd003' and 'd005' AND emp_no=10001;
이라는 쿼리가 있을 때 dep_no IN ('d003','d004',d005')로 처리해도 무관한대 인덱스 레인지 스캔하는 rows칼럼 레코드 수는 매우 큰 차이가 있다
(select * from dept_emp USE INDEX(PRIMARY) where...)
따라서 검색하는 수가 몇 개 되지 않을 때 IN 연산자가 낫다. 

ex)
mysql > SELECT * FROM employee WHERE emp_no BETWEEN 10001 AND 400000;
mysql > SELECT * FROM employee WHERE emp_no>=10001 AND emp_no <=400000;
두 쿼리를 비교했을 때 위의 BETWEEN을 사용한 쿼리의 평균 소요 시간은 0.38초 이고 AND 연산자는 0.41초이다.
크게 고려할 수준은 아니지만 BETWEEN이 더 빠르다.

