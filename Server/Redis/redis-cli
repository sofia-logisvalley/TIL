2018 11 27

#Redis

##redis-cli

오늘 개발하면서 찾아보고 실제 적용한 redis를 정리해보겠습니다
Redis는 데이터베이스, 캐시 및 메시지 브로커로 사용되는 오픈 소스 (BSD 라이센스) 인 메모리 데이터 구조 저장소 입니다. 
문자열 , 해시 , 목록 , 집합 , 범위 쿼리, 비트 맵 , 하이퍼 로그 로그 , 반경 쿼리 및 스트림이있는 
지형 공간 인덱스가 있는 정렬 된 세트 와 같은 데이터 구조를 지원합니다 . 
Redis는 내장 된 복제 , Lua 스크립팅 , LRU 제거 , 트랜잭션 및 다른 수준의 온 디스크 지속성 을 제공하며를 통해 고 가용성을 제공합니다.
Redis Sentinel 과 Redis Cluster를 이용한 자동 파티셔닝 .

문자열에 추가하는 것과 같이 이러한 유형의 원자 연산 을 실행할 수 있습니다 . 
해쉬에서 값을 증가시키는 것 ; 
요소를리스트로 푸시 ; 
집합 교차점 , 노동 조합 및 차이 계산 ; 
또는 정렬 된 집합에서 가장 높은 순위의 멤버를 얻는 것 .

탁월한 성능을 달성하기 위해 Redis는 메모리 내 데이터 세트를 사용 합니다. 
유스 케이스에 따라 데이터 세트를 매번 디스크 에 덤프 하거나 로그에 각 명령을 추가하여 유지할 수 있습니다 . 
기능이 풍부한 네트워크화 된 메모리 내 캐시 만 있으면 퍼시스턴스를 선택적으로 비활성화 할 수 있습니다.

Redis는 또한 매우 빠른 논 블로킹 첫 번째 동기화, 
넷 스플릿에서 부분 재 동기화와의 자동 재 연결을 통해 사소한 - 설치 마스터 - 슬레이브 비동기 복제 를 지원합니다 .

기타 기능은 다음과 같습니다.

업무
펍 / 서브
루아 스크립팅
제한된 수명이있는 키
키의 LRU 축출
자동 장애 조치
대부분의 프로그래밍 언어 에서 Redis를 사용할 수 있습니다 .

Redis는 ANSI C 로 작성되었으며 Linux, * BSD, OS X와 ​​같은 대부분의 POSIX 시스템에서 외부 종속성없이 작동합니다. 
Linux와 OS X는 Redis가 개발되고 더 많은 테스트를 거친 두 가지 운영 체제이며 배포를 위해 Linux를 사용하는 것이 좋습니다 . 
Redis는 SmartOS와 같은 Solaris에서 파생 된 시스템에서 작동하지만 지원은 최선의 노력 입니다. 
Windows 빌드에 대한 공식적인 지원은 없지만 Microsoft는 Redis 의 Win-64 포트를 개발하고 유지 관리합니다 .

출처 https://redis.io/topics/introduction(번역)



키 목록 얻기
Redis 서버를 차단하지 않는 방식으로 키 공간을 스캔하여 KEYS *모든 키 이름을 인쇄하거나 특정 패턴으로 필터링 할 수도 있습니다. --bigkeys옵션과 마찬가지로이 모드 는 SCAN 명령을 사용 하므로 데이터 세트가 변경되는 경우 키가 여러 번보고 될 수 있지만 키가 반복 시작 이후에 있었던 경우 누락 된 키는 없습니다. 이 옵션을 사용하는 명령 때문에 호출 --scan됩니다.

$ redis-cli --scan | head -10
key-419
key-71
key-236
key-50
key-38
key-458
key-453
key-499
key-446
key-371
이 참고가 head -10출력의 첫 번째 라인을 인쇄하기 위해 사용된다.

스캐닝은 SCAN 명령 의 기본 패턴 일치 기능을 --pattern옵션 과 함께 사용할 수 있습니다.

$ redis-cli --scan --pattern '*-11*'
key-114
key-117
key-118
key-113
key-115
key-112
key-119
key-11
key-111
key-110
key-116
wc명령을 통해 출력을 파이핑하면 특정 종류의 객체를 키 이름별로 계산할 수 있습니다.

$ redis-cli --scan --pattern 'user:*' | wc -l
3829433

https://redis.io/topics/rediscli


